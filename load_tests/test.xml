<!-- 
  instructions to run the script:
  1. Deploy app on Elastic Beanstalk
  2. Create a Tsung instance on Cloudformation
  3. 'ssh' into Elastic Beanstalk 
  4. 'cd' into app/load_tests
  5. If already exists, delete 'random_emails.csv' and generate it by running
     '$python3 generate_random_emails.py'
     -run 'chmod' if needed
  6. 'ssh' into Tsung instance
  7. Transfer 'test.xml' and 'random_emails.csv' to Tsung instance
  8. Run the script on Tsung instance using '$tsung -f test.xml start'
     -should take around 2 minutes
  9. To generate graphs, 'cd' into tsung_logs/<name of newly generated directory>
     -name of the new directory should be the most recent timestamp
  10. Run '/usr/local/lib/tsung/bin/tsung_stats.pl' to generate graphs
  11. To view graphs, transfer directory to local machine and open 'graphs.html'
  12. To run script again, delete 'random_emails.csv' in Elastic Beanstalk and repeat steps 5-11
  
  Reasoning:
  The whole point is to generate a new 'random_emails.csv' for eact test. This is because
  Tsung doesn't really pick random emails from our 'random_emails.csv', when creating a
  new user. So if you try to run the script without generating a new 'random_emails.csv',
  it will not work, because it uses the same emails as the last time you ran the script.
  And since it tries to signup with existing emails, our app doesn't let you.
  I don't know why this is... But this is how I got the script to work.
-->


<?xml version="1.0"?>
<!DOCTYPE tsung SYSTEM "/usr/local/share/tsung/tsung-1.0.dtd" [] >
<tsung loglevel="notice">
  <clients>
    <client host="localhost" use_controller_vm="true" maxusers="15000"/>
  </clients>

  <servers>
    <server host="incognito-dev.us-west-2.elasticbeanstalk.com" port="80" type="tcp"/>
  </servers>

  <load>
    <arrivalphase phase="1" duration="30" unit="second">
      <users arrivalrate="1" unit="second"/>
    </arrivalphase>
    <arrivalphase phase="2" duration="30" unit="second">
      <users arrivalrate="2" unit="second"/>
    </arrivalphase>
    <arrivalphase phase="3" duration="30" unit="second">
      <users arrivalrate="4" unit="second"/>
    </arrivalphase>
    <arrivalphase phase="4" duration="30" unit="second">
      <users arrivalrate="8" unit="second"/>
    </arrivalphase>
  </load>

  <options>
    <option name="global_ack_timeout" value="2000"/>

    <option type="ts_http" name="user_agent">
      <user_agent probability="100">Mozilla/5.0 (Windows; U; Windows NT 5.2; fr-FR; rv:1.7.8) Gecko/20050511 Firefox/1.0.4</user_agent>
    </option>

    <option name="file_server" id="random_emails" value="./random_emails.csv"/>
  </options>

  <sessions>
    <session name="http-example" probability="100" type="ts_http">
      <!-- visit the home page -->
      <request>
        <http url="/" version="1.1" method="GET"/>
      </request>

      <thinktime value="2" random="true"/>

      <!-- user logs in -->
      <request>
        <http url="/login" version="1.1" method="GET"/>
      </request>

      <!-- user signs up -->
      <request>
        <http url="/signup" version="1.1" method="GET"/>
      </request>

      <thinktime value="5" random="true"/>

      <setdynvars sourcetype="random_string" length="10">
        <var name="username"/>
      </setdynvars>

      <setdynvars sourcetype="random_string" length="8">
        <var name="password"/>
      </setdynvars>

      <setdynvars sourcetype="file" fileid="random_emails" delimiter="," order="random">
        <var name="email"/>
      </setdynvars>

      <request subst="true">
        <dyn_variable name="created_profile_url" re="[Ll]ocation: (http://.*)\r" />
        <http url="/users" version="1.1" contents="user%5Busername%5D=%%_username%%&amp;user%5Bemail%5D=%%_email%%&amp;user%5Bpassword%5D=%%_password%%&amp;user%5Bpassword_confirmation%5D=%%_password%%&amp;commit=Create+my+account"
          content_type="application/x-www-form-urlencoded" 
          method="POST">
        </http>
      </request>

      <!-- user visits home page -->
      <request>
        <http url="/" version="1.1" method="GET"/>
      </request>

      <thinktime value="5" random="true"/>

      <!-- user visits school community -->
      <request>
        <http url="/posts" version="1.1" method="GET"/>
      </request>

      <thinktime value="5" random="true"/>

      <!-- user makes a new post on the school community -->
      <request>
        <http url="/posts/new" version="1.1" method="GET"/>
      </request>

      <thinktime value="5" random="true"/>

      <setdynvars sourcetype="random_string" length="8">
        <var name="school_post_title"/>
      </setdynvars>

      <setdynvars sourcetype="random_string" length="30">
        <var name="school_post_body"/>
      </setdynvars>

      <request subst="true">
        <dyn_variable name="created_school_post_url" re="[Ll]ocation: (http://.*)\r" />
        <http url="/posts" version="1.1" contents="post%5Btitle%5D=%%_school_post_title%%&amp;post%5Bbody%5D=%%_school_post_body%%&amp;post%5Bpublic%5D=0&amp;commit=Create+Post" 
          content_type="application/x-www-form-urlencoded" 
          method="POST">
        </http>
      </request>

      <!-- user edits the created post -->
      <setdynvars sourcetype="random_string" length="30">
        <var name="edited_post_body" />
      </setdynvars>

      <request subst="true">
        <http url="%%_created_school_post_url%%" version="1.1" contents="post%5Btitle%5D=%%_school_post_title%%&amp;post%5Bbody%5D=%%_edited_post_body%%&amp;commit=Update+Post"
          content_type="application/x-www-form-urlencoded" 
          method="PATCH">
        </http>
      </request>

      <!-- user deletes the created post -->
      <request subst="true">
        <http url="%%_created_school_post_url%%" version="1.1" method="DELETE">
        </http>
      </request>

      <!-- user visits the general community -->
      <request>
        <http url="/generalposts" version="1.1" method="GET"/>
      </request>

      <!-- user makes a new post in general community -->
      <request>
        <http url="/posts/new" version="1.1" method="GET"/>
      </request>

      <thinktime value="5" random="true"/>

      <setdynvars sourcetype="random_string" length="8">
        <var name="general_post_title"/>
      </setdynvars>

      <setdynvars sourcetype="random_string" length="30">
        <var name="general_post_body"/>
      </setdynvars>

      <request subst="true">
        <dyn_variable name="created_general_post_url" re="[Ll]ocation: (http://.*)\r" />
        <http url="/posts" version="1.1" contents="post%5Btitle%5D=%%_general_post_title%%&amp;post%5Bbody%5D=%%_general_post_body%%&amp;post%5Bpublic%5D=1&amp;commit=Create+Post" 
          content_type="application/x-www-form-urlencoded" 
          method="POST">
        </http>
      </request>

      <!-- user likes their own post -->
      <request subst="true">
        <http url="%%_created_general_post_url%%/like" version="1.1" method="PUT"></http>
      </request>

      <!-- user uses the search bar -->
      <setdynvars sourcetype="random_string" length="8">
        <var name="search"/>
      </setdynvars>

      <request subst="true">
        <http url="/search?search=%%_search%%" version="1.1" method="GET"/>
      </request>

      <!-- user visits their own profile -->
      <request subst="true">
        <http url="%%_created_profile_url%%" version="1.1" method="GET"></http>
      </request>

      <!-- user logs out -->
      <request>
        <http url="/logout" version="1.1" content_type="application/x-www-form-urlencoded" method="DELETE">
        </http>
      </request>
    </session>
  </sessions>
</tsung>
